{"version":3,"sources":["webpack:///./src/pages/success-sent.js","webpack:///./src/components/seo/seo.js","webpack:///./src/components/contacts/contacts.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gsap__WEBPACK_IMPORTED_MODULE_1__","_components_seo_seo__WEBPACK_IMPORTED_MODULE_2__","_components_contacts_contacts__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_4__","SuccessPage","textRef","useRef","buttonRef","tl","TimelineLite","paused","useEffect","to","current","opacity","y","play","a","createElement","Fragment","description","title","child","className","ref","SEO","_ref","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","gsap__WEBPACK_IMPORTED_MODULE_2__","Contacts","titleRef","timeLine"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAgCeU,UAzBK,WAClB,IAAMC,EAAUC,iBAAO,MACjBC,EAAYD,iBAAO,MACnBE,EAAK,IAAIC,IAAa,CAACC,QAAQ,IAOrC,OANAC,oBAAU,WACRH,EACGI,GAAGP,EAAQQ,QAAS,IAAM,CAACC,QAAS,EAAGC,EAAG,GAAI,UAC9CH,GAAGL,EAAUM,QAAS,IAAM,CAACC,QAAS,EAAGC,EAAG,IAC5CC,SAGHlB,EAAAmB,EAAAC,cAAApB,EAAAmB,EAAAE,SAAA,KACErB,EAAAmB,EAAAC,cAACjB,EAAA,EAAD,CAAKmB,YAAW,YAAeC,MAAM,mCACrCvB,EAAAmB,EAAAC,cAAChB,EAAA,EAAD,CAAUoB,MACRxB,EAAAmB,EAAAC,cAAApB,EAAAmB,EAAAE,SAAA,KACErB,EAAAmB,EAAAC,cAAA,KAAGK,UAAS,+BAAkCC,IAAKnB,GAAnD,iEACAP,EAAAmB,EAAAC,cAAA,OAAKK,UAAU,mCAAmCC,IAAKjB,GACrDT,EAAAmB,EAAAC,cAACf,EAAA,EAAD,CAAMoB,UAAU,SAASX,GAAE,KAA3B,oGCZZ,SAASa,EAATC,GAAiD,IAAlCN,EAAkCM,EAAlCN,YAAaO,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,KAAMP,EAASK,EAATL,MAC9BQ,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBZ,GAAeS,EAAKI,aAAab,YAEzD,OACEc,EAAAjB,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdT,QAEFN,MAAOA,EACPgB,cAAa,QAAUR,EAAKI,aAAaZ,MACzCO,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASlB,GAEX,CACEmB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASlB,GAEX,CACEiB,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNR,YAAW,IAUEK,kUCvFf,IAAA5B,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAA+C,GAAAlD,EAAA,KAAAA,EAAA,MAoBemD,IAfE,SAAAnB,GAAe,IAAZJ,EAAYI,EAAZJ,MACZwB,EAAWxC,iBAAO,MAClByC,EAAW,IAAItC,IAAa,CAACC,QAAQ,IAM3C,OALAC,oBAAU,WACRoC,EACGnC,GAAGkC,EAASjC,QAAS,IAAM,CAACC,QAAS,EAAGC,EAAG,IAC3CC,SAGHlB,EAAAmB,EAAAC,cAAA,WAASK,UAAU,YACjBzB,EAAAmB,EAAAC,cAAA,MAAIM,IAAKsB,EAAUvB,UAAU,iCAA7B,yBACCD","file":"component---src-pages-success-sent-js-7fcb872f8c013c49fe99.js","sourcesContent":["import React, { useEffect, useRef } from \"react\"\r\nimport { TimelineLite } from \"gsap\"\r\n\r\nimport SEO from \"../components/seo/seo\"\r\nimport Contacts from \"../components/contacts/contacts\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst SuccessPage = () => {\r\n  const textRef = useRef(null);\r\n  const buttonRef = useRef(null);\r\n  const tl = new TimelineLite({paused: false})\r\n  useEffect(() => {\r\n    tl\r\n      .to(textRef.current, 0.25, {opacity: 1, y: 0}, \"+=0.25\")\r\n      .to(buttonRef.current, 0.25, {opacity: 1, y: 0})\r\n      .play()\r\n  })\r\n  return (\r\n    <>\r\n      <SEO description={`Portfolio`} title=\"The form has been success sent\"/>\r\n      <Contacts child={\r\n        <>\r\n          <p className={`success-sent-text slide-down`} ref={textRef}>Your message has been successfully send. I&rsquo;ll write you soon.</p>\r\n          <div className=\"contacts__button-home slide-down\" ref={buttonRef}>\r\n            <Link className=\"button\" to={`/`}>Back Home</Link>\r\n          </div>\r\n        </>\r\n      }/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuccessPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO;\r\n","import React, { useEffect, useRef } from \"react\"\r\n\r\nimport \"./contacts.css\"\r\nimport { TimelineLite } from \"gsap\"\r\n\r\nconst Contacts = ({ child }) => {\r\n  const titleRef = useRef(null);\r\n  const timeLine = new TimelineLite({paused: true})\r\n  useEffect(() => {\r\n    timeLine\r\n      .to(titleRef.current, 0.25, {opacity: 1, y: 0})\r\n      .play()\r\n  })\r\n  return (\r\n    <section className=\"contacts\">\r\n      <h1 ref={titleRef} className=\"h1 contacts__title slide-down\">Want to work with me?</h1>\r\n      {child}\r\n    </section>\r\n  )\r\n}\r\nexport default Contacts\r\n"],"sourceRoot":""}