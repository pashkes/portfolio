{"version":3,"sources":["webpack:///./src/components/promo/promo.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo/seo.js"],"names":["Promo","title","useRef","paragraph","button","myTween","TimelineLite","paused","useEffect","to","current","y","opacity","play","clear","react_default","a","createElement","className","ref","gatsby_browser_entry","IndexPage","Fragment","seo","description","promo_promo","SEO","_ref","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"+IAmCeA,UA5BD,WACZ,IAAMC,EAAQC,iBAAO,MACfC,EAAYD,iBAAO,MACnBE,EAASF,iBAAO,MAChBG,EAAU,IAAIC,IAAa,CAAEC,QAAQ,IAU3C,OATAC,oBAAU,WAMR,OALAH,EACGI,GAAGR,EAAMS,QAAS,IAAM,CAAEC,EAAG,EAAGC,QAAS,IACzCH,GAAGN,EAAUO,QAAS,IAAM,CAAEC,EAAG,EAAGC,QAAS,GAAK,SAClDH,GAAGL,EAAOM,QAAS,IAAM,CAAEC,EAAG,EAAGC,QAAS,GAAK,SAC/CC,OACI,kBAAOR,EAAQS,WAItBC,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACjBH,EAAAC,EAAAC,cAAA,MAAIE,IAAKlB,EAAOiB,UAAU,8BAA1B,8CACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,6BAAgCC,IAAKhB,GAAjD,kGAIAY,EAAAC,EAAAC,cAAA,OAAKE,IAAKf,EAAQc,UAAS,cACzBH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAS,uBAA0BT,GAAE,aAA3C,eCjBOY,UAPG,kBAChBN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAKC,YAAW,YAAevB,MAAM,SACrCc,EAAAC,EAAAC,cAACQ,EAAD,yFCIJ,SAASC,EAATC,GAAiD,IAAlCH,EAAkCG,EAAlCH,YAAaI,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,KAAM5B,EAAS0B,EAAT1B,MAC9B6B,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBT,GAAeM,EAAKI,aAAaV,YAEzD,OACEW,EAAAnB,EAAAC,cAACmB,EAAApB,EAAD,CACEqB,eAAgB,CACdT,QAEF3B,MAAOA,EACPqC,cAAa,QAAUR,EAAKI,aAAajC,MACzC4B,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASvC,GAEX,CACEwC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASvC,GAEX,CACEsC,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNL,YAAW,IAUEE","file":"component---src-pages-index-js-2388765a846432955706.js","sourcesContent":["import React, { useEffect, useRef } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { TimelineLite } from \"gsap\"\r\n\r\nimport \"./promo.css\"\r\n\r\n\r\nconst Promo = () => {\r\n  const title = useRef(null)\r\n  const paragraph = useRef(null)\r\n  const button = useRef(null)\r\n  const myTween = new TimelineLite({ paused: true })\r\n  useEffect(() => {\r\n    myTween\r\n      .to(title.current, 0.25, { y: 0, opacity: 1 })\r\n      .to(paragraph.current, 0.25, { y: 0, opacity: 1 }, \"-=0.1\")\r\n      .to(button.current, 0.25, { y: 0, opacity: 1 }, \"-=0.1\")\r\n      .play()\r\n    return () =>  myTween.clear()\r\n  })\r\n\r\n  return (\r\n    <section className=\"promo\">\r\n      <h1 ref={title} className=\"promo__title h1 slide-down\">I&rsquo;m Front-end developer from Kyiv, Ukraine</h1>\r\n      <p className={`promo__subtitle slide-down`} ref={paragraph}>I&nbsp;don&rsquo;t like to&nbsp;define myself by&nbsp;the work\r\n        I&rsquo;ve\r\n        done.\r\n        I&nbsp;define myself by&nbsp;the work&nbsp;I want to&nbsp;do.</p>\r\n      <div ref={button} className={`slide-down`}>\r\n        <Link className={`promo__button button`} to={`/contacts`}>hire me</Link>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Promo\r\n","import React from \"react\"\r\n\r\nimport SEO from \"../components/seo/seo\"\r\nimport Promo from \"../components/promo/promo\"\r\n\r\nconst IndexPage = () => (\r\n  <>\r\n    <SEO description={`Portfolio`} title=\"Home\"/>\r\n    <Promo/>\r\n  </>\r\n);\r\n\r\nexport default IndexPage;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}